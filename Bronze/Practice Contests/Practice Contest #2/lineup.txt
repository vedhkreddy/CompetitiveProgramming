read in N
//string to vector of string
make map of Bessie:[], Buttercup:[], Belinda:[] etc. //make sure uppercase

go through N times
    string a, b, c, d, e, f
    fin >> a >> b >> c >> d >> e >> f
    demands[f].push_back(a);

vector<string> cows = [Beatrice, Belinda, Bella, Bessie, Betsy, Blue, Buttercup, Sue];

do {
    for(int i = 0; i < 8; i++){
        if (demands[cows[i]].size() == 0){
            continue;
        }
        else if (demands[cows[i]].size() == 1){
            if (i == 0){
                if (demands[cows[i]][0].compare(cows[1]) != 0){
                    break;
                }
            }
            else if (i == 7){
                if (demands[cows[i]][0].compare(cows[7]) != 0){
                    break;
                }
            }
            else{
                if (demands[cows[i]][0].compare(cows[i+1]) != 0 && demands[cows[i]][0].compare(cows[i - 1]) != 0){
                    break;
                }
            }
        }
        else{
            if ((demands[cows[i]][0].compare(cows[i+1]) != && demands[cows[i]][0].compare(cows[i - 1]) != 0) || (demands[cows[i]][1].compare(cows[i+1]) != 0 && demands[cows[i]][1].compare(cows[i - 1])) != 0){
                break;
            }
        }
    }
    for(string s : cows){
        fout << s << endl;
    }
} while (next_permutation(cows.begin(), cows.end()))


    